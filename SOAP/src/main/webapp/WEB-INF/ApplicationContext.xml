<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	
	
	<!-- SCAN DES DIFFERENTS BEANS ANNOTES -->
  	<context:annotation-config/>
    <context:component-scan base-package="fr.mb.biblio.configuration,fr.mb.biblio.models, fr.mb.biblio.dao, fr.mb.biblio.soap"/>
  
  	<!-- FICHIERS PROPERTIES A RECUPERER -->	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <list>
            <value>classpath:hibernate.properties</value>
            <value>classpath:configPret.properties</value>
            <value>classpath:email.properties</value>
            <value>classpath:relanceMail.properties</value>
        </list>
    </property>
	</bean>
  
  	<!-- BEAN PASSWORD CALLBACK POUR LES INTERCEPTEURS DE SECURITE -->
    <bean id="myPasswordCallback" class="fr.mb.biblio.configuration.ServerPasswordCallback"/>
    
    
    <!-- DECLARATION DES SERVICES -->
    
    	<!-- TEST -->
    <jaxws:endpoint id="livreTestService" implementor="fr.mb.biblio.soap.test.LivreTestServiceImpl" address="/livreTestService"/>
   		
   		<!-- UTILISATEUR -->
    <jaxws:endpoint id="userService" implementor="fr.mb.biblio.soap.userService.impl.UserServiceImpl" address="/userService">
    	  <jaxws:inInterceptors>
		    <bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
		      <constructor-arg>
		        <map>
		          <entry key="action" value="UsernameToken" />
		          <entry key="passwordType" value="PasswordText" />
		          <entry key="passwordCallbackRef" value-ref="myPasswordCallback" /> 
		        </map>
		      </constructor-arg> 
		    </bean>
		  </jaxws:inInterceptors>
    </jaxws:endpoint>
    
    	<!-- LIVRE -->
    <jaxws:endpoint id="livreService" implementor="fr.mb.biblio.soap.livreService.impl.LivreServiceImpl" address="/livreService"/>
	
		<!-- PRET -->
	<jaxws:endpoint id="pretService" implementor="fr.mb.biblio.soap.pretService.impl.PretServiceImpl" address="/pretService">
	  	<jaxws:inInterceptors>
		    <bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
		      <constructor-arg>
		        <map>
		          <entry key="action" value="UsernameToken" />
		          <entry key="passwordType" value="PasswordText" />
		          <entry key="passwordCallbackRef" value-ref="myPasswordCallback" /> 
		        </map>
		      </constructor-arg> 
		    </bean>
  		</jaxws:inInterceptors>		
	</jaxws:endpoint>

	

	




	<!-- PARAMETRAGE HIBERNATE -->
	
		<!-- DATASOURCE -->	
   <bean id="hibernateDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${hibernate.connection.driver_class}" />
		<property name="url" value="${hibernate.connection.url}" />
		<property name="username" value="${hibernate.connection.username}" />
		<property name="password" value="${hibernate.connection.password}" />
	</bean> 
      
     	 <!-- SESSIONFACTORY -->	
    <bean id="sessionFactory"  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">  
        <property name="dataSource" ref="hibernateDataSource"></property> 

         	<!-- PACKAGE DES MODELS A SCANNER --> 
     	<property name="packagesToScan">
         	<array>
              <value>fr.mb.biblio.models</value>
         	</array>
    	 </property>
          
         
          
        <property name="hibernateProperties">  
            <props>  
               <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
            </props>  
        </property>  
    </bean>
     
    	<!-- TEMPLATE HIBERNATE -->
    <bean id="template" class="org.springframework.orm.hibernate5.HibernateTemplate">  
    	<property name="sessionFactory" ref="sessionFactory"></property>
    	<property name="checkWriteOperations" value="false"></property> 
    </bean>
    
    	<!-- TRANSACTION MANAGER -->
    <tx:annotation-driven/>
	    <bean id="transactionManager"
	         class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	     <property name="sessionFactory" ref="sessionFactory" />
	   	</bean>
	   	
	   	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		   <property name="host" value="${email.host}" />
		   <property name="port" value="${email.port}" />
		   <property name="username" value="${email.username}" />
		   <property name="password" value="${email.password}" />
		
		    <property name="javaMailProperties">
		    <props>
		        <prop key="mail.smtp.auth">true</prop>
		        <prop key="mail.smtp.starttls.enable">true</prop>
		        </props>
		     </property>
 </bean>
 
 <bean id="freeMarkerConfigurationFactory" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
    <property name="templateLoaderPath" value="classpath:/templates/"/>
    <property name="preferFileSystemAccess" value="false"/>
</bean>
</beans>
